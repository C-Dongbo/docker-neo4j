#!/usr/bin/env bash
set -o errexit -o nounset

# This tests that neo4j starts up following the documented and recommended command:
# docker run
#   --publish=7474:7474 --publish=7687:7687
#   --volume=$HOME/neo4j/data:/data
#   --volume=$HOME/neo4j/logs:/logs
#   neo4j

. "$(dirname "$0")/helpers.sh"

docker_run_with_data_and_logs_volumes() {
  local l_image="$1" l_cname="$2" l_volumedir="$3"; shift; shift; shift

  local envs=()
  if [[ ! "$@" =~ "NEO4J_ACCEPT_LICENSE_AGREEMENT=no" ]]; then
    envs+=("--env=NEO4J_ACCEPT_LICENSE_AGREEMENT=yes")
  fi
  for env in "$@"; do
    envs+=("--env=${env}")
  done
  #local user
  mkdir "${data_and_logs_dir}"/data
  mkdir "${data_and_logs_dir}"/logs
  local cid
  cid="$(docker run --detach "${envs[@]}" --name="${l_cname}" \
      --user="$(id -u):$(id -g)" \
      --volume="${l_volumedir}"/data:/data \
      --volume="${l_volumedir}"/logs:/logs \
      "${l_image}")"
  echo "log: tmp/out/${cid}.log"
  trap "docker_cleanup ${cid}" EXIT
}

readonly image="$1"
readonly series="$2"
readonly cname="neo4j-$(uuidgen)"

readonly data_and_logs_dir=$(mktemp --directory --tmpdir=/tmp/)
GID="$(gid_of "${data_and_logs_dir}")"
readonly GID

docker_run_with_data_and_logs_volumes "$image" "$cname" "${data_and_logs_dir}" "NEO4J_AUTH=none"
readonly ip="$(docker_ip "${cname}")"
neo4j_wait "${ip}"

if [[ "${series}" == "2.3" ]] || [[ "${series}" == "3.0" ]]; then
  echo "Skipping: UID checks, code not present pre-3.1"
  exit 0
fi

check_mount_folder_owner_does_not_match "${data_and_logs_dir}" "0" "$0"
